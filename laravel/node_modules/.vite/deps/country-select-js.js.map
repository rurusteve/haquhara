{
  "version": 3,
  "sources": ["../../country-select-js/build/js/countrySelect.js"],
  "sourcesContent": ["// wrap in UMD - see https://github.com/umdjs/umd/blob/master/jqueryPlugin.js\n(function(factory) {\n\tif (typeof define === \"function\" && define.amd) {\n\t\tdefine([ \"jquery\" ], function($) {\n\t\t\tfactory($, window, document);\n\t\t});\n\t} else if (typeof module === \"object\" && module.exports) {\n\t\tmodule.exports = factory(require(\"jquery\"), window, document);\n\t} else {\n\t\tfactory(jQuery, window, document);\n\t}\n})(function($, window, document, undefined) {\n\t\"use strict\";\n\tvar pluginName = \"countrySelect\", id = 1, // give each instance its own ID for namespaced event handling\n\tdefaults = {\n\t\t// Default country\n\t\tdefaultCountry: \"\",\n\t\t// Position the selected flag inside or outside of the input\n\t\tdefaultStyling: \"inside\",\n\t\t// don't display these countries\n\t\texcludeCountries: [],\n\t\t// Display only these countries\n\t\tonlyCountries: [],\n\t\t// The countries at the top of the list. Defaults to United States and United Kingdom\n\t\tpreferredCountries: [ \"us\", \"gb\" ],\n\t\t// localized country names e.g. { 'de': 'Deutschland' }\n\t\tlocalizedCountries: null,\n\t\t// Set the dropdown's width to be the same as the input. This is automatically enabled for small screens.\n\t\tresponsiveDropdown: ($(window).width() < 768 ? true : false),\n\t}, keys = {\n\t\tUP: 38,\n\t\tDOWN: 40,\n\t\tENTER: 13,\n\t\tESC: 27,\n\t\tBACKSPACE: 8,\n\t\tPLUS: 43,\n\t\tSPACE: 32,\n\t\tA: 65,\n\t\tZ: 90\n\t}, windowLoaded = false;\n\t// keep track of if the window.load event has fired as impossible to check after the fact\n\t$(window).on('load', function() {\n\t\twindowLoaded = true;\n\t});\n\tfunction Plugin(element, options) {\n\t\tthis.element = element;\n\t\tthis.options = $.extend({}, defaults, options);\n\t\tthis._defaults = defaults;\n\t\t// event namespace\n\t\tthis.ns = \".\" + pluginName + id++;\n\t\tthis._name = pluginName;\n\t\tthis.init();\n\t}\n\tPlugin.prototype = {\n\t\tinit: function() {\n\t\t\t// Process all the data: onlyCountries, excludeCountries, preferredCountries, defaultCountry etc\n\t\t\tthis._processCountryData();\n\t\t\t// Generate the markup\n\t\t\tthis._generateMarkup();\n\t\t\t// Set the initial state of the input value and the selected flag\n\t\t\tthis._setInitialState();\n\t\t\t// Start all of the event listeners: input keyup, selectedFlag click\n\t\t\tthis._initListeners();\n\t\t\t// Return this when the auto country is resolved.\n\t\t\tthis.autoCountryDeferred = new $.Deferred();\n\t\t\t// Get auto country.\n\t\t\tthis._initAutoCountry();\n\t\t\t// Keep track as the user types\n\t\t        this.typedLetters = \"\";\n\n\t\t\treturn this.autoCountryDeferred;\n\t\t},\n\t\t/********************\n\t\t *  PRIVATE METHODS\n\t\t ********************/\n\t\t// prepare all of the country data, including onlyCountries, excludeCountries, preferredCountries and\n\t\t// defaultCountry options\n\t\t_processCountryData: function() {\n\t\t\t// set the instances country data objects\n\t\t\tthis._setInstanceCountryData();\n\t\t\t// set the preferredCountries property\n\t\t\tthis._setPreferredCountries();\n\t\t\t// translate countries according to localizedCountries option\n\t\t\tif (this.options.localizedCountries) this._translateCountriesByLocale();\n\t\t\t// sort countries by name\n\t\t\tif (this.options.onlyCountries.length || this.options.localizedCountries) {\n\t\t\t\tthis.countries.sort(this._countryNameSort);\n\t\t\t}\n\t\t},\n\t\t// process onlyCountries array if present\n\t\t_setInstanceCountryData: function() {\n\t\t\tvar that = this;\n\t\t\tif (this.options.onlyCountries.length) {\n\t\t\t\tvar newCountries = [];\n\t\t\t\t$.each(this.options.onlyCountries, function(i, countryCode) {\n\t\t\t\t\tvar countryData = that._getCountryData(countryCode, true);\n\t\t\t\t\tif (countryData) {\n\t\t\t\t\t\tnewCountries.push(countryData);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.countries = newCountries;\n\t\t\t} else if (this.options.excludeCountries.length) {\n                var lowerCaseExcludeCountries = this.options.excludeCountries.map(function(country) {\n                    return country.toLowerCase();\n                });\n                this.countries = allCountries.filter(function(country) {\n                    return lowerCaseExcludeCountries.indexOf(country.iso2) === -1;\n                });\n            } else {\n\t\t\t\tthis.countries = allCountries;\n\t\t\t}\n\t\t},\n\t\t// Process preferred countries - iterate through the preferences,\n\t\t// fetching the country data for each one\n\t\t_setPreferredCountries: function() {\n\t\t\tvar that = this;\n\t\t\tthis.preferredCountries = [];\n\t\t\t$.each(this.options.preferredCountries, function(i, countryCode) {\n\t\t\t\tvar countryData = that._getCountryData(countryCode, false);\n\t\t\t\tif (countryData) {\n\t\t\t\t\tthat.preferredCountries.push(countryData);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t// Translate Countries by object literal provided on config\n\t\t_translateCountriesByLocale() {\n\t\t\tfor (let i = 0; i < this.countries.length; i++) {\n\t\t\t\tconst iso = this.countries[i].iso2.toLowerCase();\n\t\t\t\tif (this.options.localizedCountries.hasOwnProperty(iso)) {\n\t\t\t\t\tthis.countries[i].name = this.options.localizedCountries[iso];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// sort by country name\n\t\t_countryNameSort(a, b) {\n\t\t\treturn a.name.localeCompare(b.name);\n\t\t},\n\t\t// generate all of the markup for the plugin: the selected flag overlay, and the dropdown\n\t\t_generateMarkup: function() {\n\t\t\t// Country input\n\t\t\tthis.countryInput = $(this.element);\n\t\t\t// containers (mostly for positioning)\n\t\t\tvar mainClass = \"country-select\";\n\t\t\tif (this.options.defaultStyling) {\n\t\t\t\tmainClass += \" \" + this.options.defaultStyling;\n\t\t\t}\n\t\t\tthis.countryInput.wrap($(\"<div>\", {\n\t\t\t\t\"class\": mainClass\n\t\t\t}));\n\t\t\tvar flagsContainer = $(\"<div>\", {\n\t\t\t\t\"class\": \"flag-dropdown\"\n\t\t\t}).insertAfter(this.countryInput);\n\t\t\t// currently selected flag (displayed to left of input)\n\t\t\tvar selectedFlag = $(\"<div>\", {\n\t\t\t\t\"class\": \"selected-flag\"\n\t\t\t}).appendTo(flagsContainer);\n\t\t\tthis.selectedFlagInner = $(\"<div>\", {\n\t\t\t\t\"class\": \"flag\"\n\t\t\t}).appendTo(selectedFlag);\n\t\t\t// CSS triangle\n\t\t\t$(\"<div>\", {\n\t\t\t\t\"class\": \"arrow\"\n\t\t\t}).appendTo(selectedFlag);\n\t\t\t// country list contains: preferred countries, then divider, then all countries\n\t\t\tthis.countryList = $(\"<ul>\", {\n\t\t\t\t\"class\": \"country-list v-hide\"\n\t\t\t}).appendTo(flagsContainer);\n\t\t\tif (this.preferredCountries.length) {\n\t\t\t\tthis._appendListItems(this.preferredCountries, \"preferred\");\n\t\t\t\t$(\"<li>\", {\n\t\t\t\t\t\"class\": \"divider\"\n\t\t\t\t}).appendTo(this.countryList);\n\t\t\t}\n\t\t\tthis._appendListItems(this.countries, \"\");\n\t\t\t// Add the hidden input for the country code\n\t\t\tthis.countryCodeInput = $(\"#\"+this.countryInput.attr(\"id\")+\"_code\");\n\t\t\tif (!this.countryCodeInput) {\n\t\t\t\tthis.countryCodeInput = $('<input type=\"hidden\" id=\"'+this.countryInput.attr(\"id\")+'_code\" name=\"'+this.countryInput.attr(\"name\")+'_code\" value=\"\" />');\n\t\t\t\tthis.countryCodeInput.insertAfter(this.countryInput);\n\t\t\t}\n\t\t\t// now we can grab the dropdown height, and hide it properly\n\t\t\tthis.dropdownHeight = this.countryList.outerHeight();\n\t\t\t// set the dropdown width according to the input if responsiveDropdown option is present or if it's a small screen\n\t\t\tif (this.options.responsiveDropdown) {\n\t\t\t\t$(window).resize(function() {\n\t\t\t\t\t$('.country-select').each(function() {\n\t\t\t\t\t\tvar dropdownWidth = this.offsetWidth;\n\t\t\t\t\t\t$(this).find('.country-list').css(\"width\", dropdownWidth + \"px\");\n\t\t\t\t\t});\n\t\t\t\t}).resize();\n\t\t\t}\n\t\t\tthis.countryList.removeClass(\"v-hide\").addClass(\"hide\");\n\t\t\t// this is useful in lots of places\n\t\t\tthis.countryListItems = this.countryList.children(\".country\");\n\t\t},\n\t\t// add a country <li> to the countryList <ul> container\n\t\t_appendListItems: function(countries, className) {\n\t\t\t// Generate DOM elements as a large temp string, so that there is only\n\t\t\t// one DOM insert event\n\t\t\tvar tmp = \"\";\n\t\t\t// for each country\n\t\t\t$.each(countries, function(i, c) {\n\t\t\t\t// open the list item\n\t\t\t\ttmp += '<li class=\"country ' + className + '\" data-country-code=\"' + c.iso2 + '\">';\n\t\t\t\t// add the flag\n\t\t\t\ttmp += '<div class=\"flag ' + c.iso2 + '\"></div>';\n\t\t\t\t// and the country name\n\t\t\t\ttmp += '<span class=\"country-name\">' + c.name + '</span>';\n\t\t\t\t// close the list item\n\t\t\t\ttmp += '</li>';\n\t\t\t});\n\t\t\tthis.countryList.append(tmp);\n\t\t},\n\t\t// set the initial state of the input value and the selected flag\n\t\t_setInitialState: function() {\n\t\t\tvar flagIsSet = false;\n\t\t\t// If the input is pre-populated, then just update the selected flag\n\t\t\tif (this.countryInput.val()) {\n\t\t\t\tflagIsSet = this._updateFlagFromInputVal();\n\t\t\t}\n\t\t\t// If the country code input is pre-populated, update the name and the selected flag\n\t\t\tvar selectedCode = this.countryCodeInput.val();\n\t\t\tif (selectedCode) {\n\t\t\t\tthis.selectCountry(selectedCode);\n\t\t\t}\n\t\t\tif (!flagIsSet) {\n\t\t\t\t// flag is not set, so set to the default country\n\t\t\t\tvar defaultCountry;\n\t\t\t\t// check the defaultCountry option, else fall back to the first in the list\n\t\t\t\tif (this.options.defaultCountry) {\n\t\t\t\t\tdefaultCountry = this._getCountryData(this.options.defaultCountry, false);\n\t\t\t\t\t// Did we not find the requested default country?\n\t\t\t\t\tif (!defaultCountry) {\n\t\t\t\t\t\tdefaultCountry = this.preferredCountries.length ? this.preferredCountries[0] : this.countries[0];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdefaultCountry = this.preferredCountries.length ? this.preferredCountries[0] : this.countries[0];\n\t\t\t\t}\n\t\t\t\tthis.defaultCountry = defaultCountry.iso2;\n\t\t\t}\n\t\t},\n\t\t// initialise the main event listeners: input keyup, and click selected flag\n\t\t_initListeners: function() {\n\t\t\tvar that = this;\n\t\t\t// Update flag on keyup.\n\t\t\t// Use keyup instead of keypress because we want to update on backspace\n\t\t\t// and instead of keydown because the value hasn't updated when that\n\t\t\t// event is fired.\n\t\t\t// NOTE: better to have this one listener all the time instead of\n\t\t\t// starting it on focus and stopping it on blur, because then you've\n\t\t\t// got two listeners (focus and blur)\n\t\t\tthis.countryInput.on(\"keyup\" + this.ns, function() {\n\t\t\t\tthat._updateFlagFromInputVal();\n\t\t\t});\n\t\t\t// toggle country dropdown on click\n\t\t\tvar selectedFlag = this.selectedFlagInner.parent();\n\t\t\tselectedFlag.on(\"click\" + this.ns, function(e) {\n\t\t\t\t// only intercept this event if we're opening the dropdown\n\t\t\t\t// else let it bubble up to the top (\"click-off-to-close\" listener)\n\t\t\t\t// we cannot just stopPropagation as it may be needed to close another instance\n\t\t\t\tif (that.countryList.hasClass(\"hide\") && !that.countryInput.prop(\"disabled\")) {\n\t\t\t\t\tthat._showDropdown();\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Despite above note, added blur to ensure partially spelled country\n\t\t\t// with correctly chosen flag is spelled out on blur. Also, correctly\n\t\t\t// selects flag when field is autofilled\n\t\t\tthis.countryInput.on(\"blur\" + this.ns, function() {\n\t\t\t\tif (that.countryInput.val() != that.getSelectedCountryData().name) {\n\t\t\t\t\tthat.setCountry(that.countryInput.val());\n\t\t\t\t}\n\t\t\t\tthat.countryInput.val(that.getSelectedCountryData().name);\n\t\t\t});\n\t\t},\n\t\t_initAutoCountry: function() {\n\t\t\tif (this.options.initialCountry === \"auto\") {\n\t\t\t\tthis._loadAutoCountry();\n\t\t\t} else {\n\t\t\t\tif (this.defaultCountry) {\n\t\t\t\t\tthis.selectCountry(this.defaultCountry);\n\t\t\t\t}\n\t\t\t\tthis.autoCountryDeferred.resolve();\n\t\t\t}\n\t\t},\n\t\t// perform the geo ip lookup\n\t\t_loadAutoCountry: function() {\n\t\t\tvar that = this;\n\n\t\t\t// 3 options:\n\t\t\t// 1) already loaded (we're done)\n\t\t\t// 2) not already started loading (start)\n\t\t\t// 3) already started loading (do nothing - just wait for loading callback to fire)\n\t\t\tif ($.fn[pluginName].autoCountry) {\n\t\t\t\tthis.handleAutoCountry();\n\t\t\t} else if (!$.fn[pluginName].startedLoadingAutoCountry) {\n\t\t\t\t// don't do this twice!\n\t\t\t\t$.fn[pluginName].startedLoadingAutoCountry = true;\n\n\t\t\t\tif (typeof this.options.geoIpLookup === 'function') {\n\t\t\t\t\tthis.options.geoIpLookup(function(countryCode) {\n\t\t\t\t\t\t$.fn[pluginName].autoCountry = countryCode.toLowerCase();\n\t\t\t\t\t\t// tell all instances the auto country is ready\n\t\t\t\t\t\t// TODO: this should just be the current instances\n\t\t\t\t\t\t// UPDATE: use setTimeout in case their geoIpLookup function calls this callback straight away (e.g. if they have already done the geo ip lookup somewhere else). Using setTimeout means that the current thread of execution will finish before executing this, which allows the plugin to finish initialising.\n\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t$(\".country-select input\").countrySelect(\"handleAutoCountry\");\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Focus input and put the cursor at the end\n\t\t_focus: function() {\n\t\t\tthis.countryInput.focus();\n\t\t\tvar input = this.countryInput[0];\n\t\t\t// works for Chrome, FF, Safari, IE9+\n\t\t\tif (input.setSelectionRange) {\n\t\t\t\tvar len = this.countryInput.val().length;\n\t\t\t\tinput.setSelectionRange(len, len);\n\t\t\t}\n\t\t},\n\t\t// Show the dropdown\n\t\t_showDropdown: function() {\n\t\t\tthis._setDropdownPosition();\n\t\t\t// update highlighting and scroll to active list item\n\t\t\tvar activeListItem = this.countryList.children(\".active\");\n\t\t\tthis._highlightListItem(activeListItem);\n\t\t\t// show it\n\t\t\tthis.countryList.removeClass(\"hide\");\n\t\t\tthis._scrollTo(activeListItem);\n\t\t\t// bind all the dropdown-related listeners: mouseover, click, click-off, keydown\n\t\t\tthis._bindDropdownListeners();\n\t\t\t// update the arrow\n\t\t\tthis.selectedFlagInner.parent().children(\".arrow\").addClass(\"up\");\n\t\t},\n\t\t// decide where to position dropdown (depends on position within viewport, and scroll)\n\t\t_setDropdownPosition: function() {\n\t\t\tvar inputTop = this.countryInput.offset().top, windowTop = $(window).scrollTop(),\n\t\t\tdropdownFitsBelow = inputTop + this.countryInput.outerHeight() + this.dropdownHeight < windowTop + $(window).height(), dropdownFitsAbove = inputTop - this.dropdownHeight > windowTop;\n\t\t\t// dropdownHeight - 1 for border\n\t\t\tvar cssTop = !dropdownFitsBelow && dropdownFitsAbove ? \"-\" + (this.dropdownHeight - 1) + \"px\" : \"\";\n\t\t\tthis.countryList.css(\"top\", cssTop);\n\t\t},\n\t\t// we only bind dropdown listeners when the dropdown is open\n\t\t_bindDropdownListeners: function() {\n\t\t\tvar that = this;\n\t\t\t// when mouse over a list item, just highlight that one\n\t\t\t// we add the class \"highlight\", so if they hit \"enter\" we know which one to select\n\t\t\tthis.countryList.on(\"mouseover\" + this.ns, \".country\", function(e) {\n\t\t\t\tthat._highlightListItem($(this));\n\t\t\t});\n\t\t\t// listen for country selection\n\t\t\tthis.countryList.on(\"click\" + this.ns, \".country\", function(e) {\n\t\t\t\tthat._selectListItem($(this));\n\t\t\t});\n\t\t\t// click off to close\n\t\t\t// (except when this initial opening click is bubbling up)\n\t\t\t// we cannot just stopPropagation as it may be needed to close another instance\n\t\t\tvar isOpening = true;\n\t\t\t$(\"html\").on(\"click\" + this.ns, function(e) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (!isOpening) {\n\t\t\t\t\tthat._closeDropdown();\n\t\t\t\t}\n\t\t\t\tisOpening = false;\n\t\t\t});\n\t\t\t// Listen for up/down scrolling, enter to select, or letters to jump to country name.\n\t\t\t// Use keydown as keypress doesn't fire for non-char keys and we want to catch if they\n\t\t\t// just hit down and hold it to scroll down (no keyup event).\n\t\t\t// Listen on the document because that's where key events are triggered if no input has focus\n\t\t\t$(document).on(\"keydown\" + this.ns, function(e) {\n\t\t\t\t// prevent down key from scrolling the whole page,\n\t\t\t\t// and enter key from submitting a form etc\n\t\t\t\te.preventDefault();\n\t\t\t\tif (e.which == keys.UP || e.which == keys.DOWN) {\n\t\t\t\t\t// up and down to navigate\n\t\t\t\t\tthat._handleUpDownKey(e.which);\n\t\t\t\t} else if (e.which == keys.ENTER) {\n\t\t\t\t\t// enter to select\n\t\t\t\t\tthat._handleEnterKey();\n\t\t\t\t} else if (e.which == keys.ESC) {\n\t\t\t\t\t// esc to close\n\t\t\t\t\tthat._closeDropdown();\n\t\t\t\t} else if (e.which >= keys.A && e.which <= keys.Z || e.which === keys.SPACE) {\n\t\t\t\t\tthat.typedLetters += String.fromCharCode(e.which);\n\t\t\t\t\tthat._filterCountries(that.typedLetters);\n\t\t\t\t} else if (e.which === keys.BACKSPACE) {\n\t\t\t\t\tthat.typedLetters = that.typedLetters.slice(0, -1);\n\t\t\t\t\tthat._filterCountries(that.typedLetters);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\t// Highlight the next/prev item in the list (and ensure it is visible)\n\t\t_handleUpDownKey: function(key) {\n\t\t\tvar current = this.countryList.children(\".highlight\").first();\n\t\t\tvar next = key == keys.UP ? current.prev() : current.next();\n\t\t\tif (next.length) {\n\t\t\t\t// skip the divider\n\t\t\t\tif (next.hasClass(\"divider\")) {\n\t\t\t\t\tnext = key == keys.UP ? next.prev() : next.next();\n\t\t\t\t}\n\t\t\t\tthis._highlightListItem(next);\n\t\t\t\tthis._scrollTo(next);\n\t\t\t}\n\t\t},\n\t\t// select the currently highlighted item\n\t\t_handleEnterKey: function() {\n\t\t\tvar currentCountry = this.countryList.children(\".highlight\").first();\n\t\t\tif (currentCountry.length) {\n\t\t\t\tthis._selectListItem(currentCountry);\n\t\t\t}\n\t\t},\n\t\t_filterCountries: function(letters) {\n\t\t\tvar countries = this.countryListItems.filter(function() {\n\t\t\t\treturn $(this).text().toUpperCase().indexOf(letters) === 0 && !$(this).hasClass(\"preferred\");\n\t\t\t});\n\t\t\tif (countries.length) {\n\t\t\t\t// if one is already highlighted, then we want the next one\n\t\t\t\tvar highlightedCountry = countries.filter(\".highlight\").first(), listItem;\n\t\t\t\tif (highlightedCountry && highlightedCountry.next() && highlightedCountry.next().text().toUpperCase().indexOf(letters) === 0) {\n\t\t\t\t\tlistItem = highlightedCountry.next();\n\t\t\t\t} else {\n\t\t\t\t\tlistItem = countries.first();\n\t\t\t\t}\n\t\t\t\t// update highlighting and scroll\n\t\t\t\tthis._highlightListItem(listItem);\n\t\t\t\tthis._scrollTo(listItem);\n\t\t\t}\n\t\t},\n\t\t// Update the selected flag using the input's current value\n\t\t_updateFlagFromInputVal: function() {\n\t\t\tvar that = this;\n\t\t\t// try and extract valid country from input\n\t\t\tvar value = this.countryInput.val().replace(/(?=[() ])/g, '\\\\');\n\t\t\tif (value) {\n\t\t\t\tvar countryCodes = [];\n\t\t\t\tvar matcher = new RegExp(value, \"i\");\n\t\t\t\t// Check for ISO codes only\n\t\t\t\tif(value.length <= 2) {\n\t\t\t\t\tfor (var i = 0; i < this.countries.length; i++) {\n\t\t\t\t\t\tif (this.countries[i].iso2.match(matcher)) {\n\t\t\t\t\t\t\tcountryCodes.push(this.countries[i].iso2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If no previous matches / larger than 2 chars, then search country name\n\t\t\t\tif(countryCodes.length == 0) {\n\t\t\t\t\tfor (var i = 0; i < this.countries.length; i++) {\n\t\t\t\t\t\tif (this.countries[i].name.match(matcher)) {\n\t\t\t\t\t\t\tcountryCodes.push(this.countries[i].iso2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Check if one of the matching countries is already selected\n\t\t\t\tvar alreadySelected = false;\n\t\t\t\t$.each(countryCodes, function(i, c) {\n\t\t\t\t\tif (that.selectedFlagInner.hasClass(c)) {\n\t\t\t\t\t\talreadySelected = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (!alreadySelected) {\n\t\t\t\t\tthis._selectFlag(countryCodes[0]);\n\t\t\t\t\tthis.countryCodeInput.val(countryCodes[0]).trigger(\"change\");\n\t\t\t\t}\n\t\t\t\t// Matching country found\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// No match found\n\t\t\treturn false;\n\t\t},\n\t\t// remove highlighting from other list items and highlight the given item\n\t\t_highlightListItem: function(listItem) {\n\t\t\tthis.countryListItems.removeClass(\"highlight\");\n\t\t\tlistItem.addClass(\"highlight\");\n\t\t},\n\t\t// find the country data for the given country code\n\t\t// the ignoreOnlyCountriesOption is only used during init() while parsing the onlyCountries array\n\t\t_getCountryData: function(countryCode, ignoreOnlyCountriesOption) {\n\t\t\tvar countryList = ignoreOnlyCountriesOption ? allCountries : this.countries;\n\t\t\tfor (var i = 0; i < countryList.length; i++) {\n\t\t\t\tif (countryList[i].iso2 == countryCode) {\n\t\t\t\t\treturn countryList[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t// update the selected flag and the active list item\n\t\t_selectFlag: function(countryCode) {\n\t\t\tif (! countryCode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.selectedFlagInner.attr(\"class\", \"flag \" + countryCode);\n\t\t\t// update the title attribute\n\t\t\tvar countryData = this._getCountryData(countryCode);\n\t\t\tthis.selectedFlagInner.parent().attr(\"title\", countryData.name);\n\t\t\t// update the active list item\n\t\t\tvar listItem = this.countryListItems.children(\".flag.\" + countryCode).first().parent();\n\t\t\tthis.countryListItems.removeClass(\"active\");\n\t\t\tlistItem.addClass(\"active\");\n\t\t},\n\t\t// called when the user selects a list item from the dropdown\n\t\t_selectListItem: function(listItem) {\n\t\t\t// update selected flag and active list item\n\t\t\tvar countryCode = listItem.attr(\"data-country-code\");\n\t\t\tthis._selectFlag(countryCode);\n\t\t\tthis._closeDropdown();\n\t\t\t// update input value\n\t\t\tthis._updateName(countryCode);\n\t\t\tthis.countryInput.trigger(\"change\");\n\t\t\tthis.countryCodeInput.trigger(\"change\");\n\t\t\t// focus the input\n\t\t\tthis._focus();\n\t\t},\n\t\t// close the dropdown and unbind any listeners\n\t\t_closeDropdown: function() {\n\t\t\tthis.countryList.addClass(\"hide\");\n\t\t\t// update the arrow\n\t\t\tthis.selectedFlagInner.parent().children(\".arrow\").removeClass(\"up\");\n\t\t\t// unbind event listeners\n\t\t\t$(document).off(\"keydown\" + this.ns);\n\t\t\t$(\"html\").off(\"click\" + this.ns);\n\t\t\t// unbind both hover and click listeners\n\t\t\tthis.countryList.off(this.ns);\n\t\t\tthis.typedLetters = \"\";\n\t\t},\n\t\t// check if an element is visible within its container, else scroll until it is\n\t\t_scrollTo: function(element) {\n\t\t\tif (!element || !element.offset()) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar container = this.countryList, containerHeight = container.height(), containerTop = container.offset().top, containerBottom = containerTop + containerHeight, elementHeight = element.outerHeight(), elementTop = element.offset().top, elementBottom = elementTop + elementHeight, newScrollTop = elementTop - containerTop + container.scrollTop();\n\t\t\tif (elementTop < containerTop) {\n\t\t\t\t// scroll up\n\t\t\t\tcontainer.scrollTop(newScrollTop);\n\t\t\t} else if (elementBottom > containerBottom) {\n\t\t\t\t// scroll down\n\t\t\t\tvar heightDifference = containerHeight - elementHeight;\n\t\t\t\tcontainer.scrollTop(newScrollTop - heightDifference);\n\t\t\t}\n\t\t},\n\t\t// Replace any existing country name with the new one\n\t\t_updateName: function(countryCode) {\n\t\t\tthis.countryCodeInput.val(countryCode).trigger(\"change\");\n\t\t\tthis.countryInput.val(this._getCountryData(countryCode).name);\n\t\t},\n\t\t/********************\n\t\t *  PUBLIC METHODS\n\t\t ********************/\n\t\t// this is called when the geoip call returns\n\t\thandleAutoCountry: function() {\n\t\t\tif (this.options.initialCountry === \"auto\") {\n\t\t\t\t// we must set this even if there is an initial val in the input: in case the initial val is invalid and they delete it - they should see their auto country\n\t\t\t\tthis.defaultCountry = $.fn[pluginName].autoCountry;\n\t\t\t\t// if there's no initial value in the input, then update the flag\n\t\t\t\tif (!this.countryInput.val()) {\n\t\t\t\t\tthis.selectCountry(this.defaultCountry);\n\t\t\t\t}\n\t\t\t\tthis.autoCountryDeferred.resolve();\n\t\t\t}\n\t\t},\n\t\t// get the country data for the currently selected flag\n\t\tgetSelectedCountryData: function() {\n\t\t\t// rely on the fact that we only set 2 classes on the selected flag element:\n\t\t\t// the first is \"flag\" and the second is the 2-char country code\n\t\t\tvar countryCode = this.selectedFlagInner.attr(\"class\").split(\" \")[1];\n\t\t\treturn this._getCountryData(countryCode);\n\t\t},\n\t\t// update the selected flag\n\t\tselectCountry: function(countryCode) {\n\t\t\tcountryCode = countryCode.toLowerCase();\n\t\t\t// check if already selected\n\t\t\tif (!this.selectedFlagInner.hasClass(countryCode)) {\n\t\t\t\tthis._selectFlag(countryCode);\n\t\t\t\tthis._updateName(countryCode);\n\t\t\t}\n\t\t},\n\t\t// set the input value and update the flag\n\t\tsetCountry: function(country) {\n\t\t\tthis.countryInput.val(country);\n\t\t\tthis._updateFlagFromInputVal();\n\t\t},\n\t\t// remove plugin\n\t\tdestroy: function() {\n\t\t\t// stop listeners\n\t\t\tthis.countryInput.off(this.ns);\n\t\t\tthis.selectedFlagInner.parent().off(this.ns);\n\t\t\t// remove markup\n\t\t\tvar container = this.countryInput.parent();\n\t\t\tcontainer.before(this.countryInput).remove();\n\t\t}\n\t};\n\t// adapted to allow public functions\n\t// using https://github.com/jquery-boilerplate/jquery-boilerplate/wiki/Extending-jQuery-Boilerplate\n\t$.fn[pluginName] = function(options) {\n\t\tvar args = arguments;\n\t\t// Is the first parameter an object (options), or was omitted,\n\t\t// instantiate a new instance of the plugin.\n\t\tif (options === undefined || typeof options === \"object\") {\n\t\t\treturn this.each(function() {\n\t\t\t\tif (!$.data(this, \"plugin_\" + pluginName)) {\n\t\t\t\t\t$.data(this, \"plugin_\" + pluginName, new Plugin(this, options));\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (typeof options === \"string\" && options[0] !== \"_\" && options !== \"init\") {\n\t\t\t// If the first parameter is a string and it doesn't start\n\t\t\t// with an underscore or \"contains\" the `init`-function,\n\t\t\t// treat this as a call to a public method.\n\t\t\t// Cache the method call to make it possible to return a value\n\t\t\tvar returns;\n\t\t\tthis.each(function() {\n\t\t\t\tvar instance = $.data(this, \"plugin_\" + pluginName);\n\t\t\t\t// Tests that there's already a plugin-instance\n\t\t\t\t// and checks that the requested public method exists\n\t\t\t\tif (instance instanceof Plugin && typeof instance[options] === \"function\") {\n\t\t\t\t\t// Call the method of our plugin instance,\n\t\t\t\t\t// and pass it the supplied arguments.\n\t\t\t\t\treturns = instance[options].apply(instance, Array.prototype.slice.call(args, 1));\n\t\t\t\t}\n\t\t\t\t// Allow instances to be destroyed via the 'destroy' method\n\t\t\t\tif (options === \"destroy\") {\n\t\t\t\t\t$.data(this, \"plugin_\" + pluginName, null);\n\t\t\t\t}\n\t\t\t});\n\t\t\t// If the earlier cached method gives a value back return the value,\n\t\t\t// otherwise return this to preserve chainability.\n\t\t\treturn returns !== undefined ? returns : this;\n\t\t}\n\t};\n\t/********************\n   *  STATIC METHODS\n   ********************/\n\t// get the country data object\n\t$.fn[pluginName].getCountryData = function() {\n\t\treturn allCountries;\n\t};\n\t// set the country data object\n\t$.fn[pluginName].setCountryData = function(obj) {\n\t\tallCountries = obj;\n\t};\n\t// Tell JSHint to ignore this warning: \"character may get silently deleted by one or more browsers\"\n\t// jshint -W100\n\t// Array of country objects for the flag dropdown.\n\t// Each contains a name and country code (ISO 3166-1 alpha-2).\n\t//\n\t// Note: using single char property names to keep filesize down\n\t// n = name\n\t// i = iso2 (2-char country code)\n\tvar allCountries = $.each([ {\n\t\tn: \"Afghanistan (‫افغانستان‬‎)\",\n\t\ti: \"af\"\n\t}, {\n\t\tn: \"Åland Islands (Åland)\",\n\t\ti: \"ax\"\n\t}, {\n\t\tn: \"Albania (Shqipëri)\",\n\t\ti: \"al\"\n\t}, {\n\t\tn: \"Algeria (‫الجزائر‬‎)\",\n\t\ti: \"dz\"\n\t}, {\n\t\tn: \"American Samoa\",\n\t\ti: \"as\"\n\t}, {\n\t\tn: \"Andorra\",\n\t\ti: \"ad\"\n\t}, {\n\t\tn: \"Angola\",\n\t\ti: \"ao\"\n\t}, {\n\t\tn: \"Anguilla\",\n\t\ti: \"ai\"\n\t}, {\n\t\tn: \"Antarctica\",\n\t\ti: \"aq\"\n\t}, {\n\t\tn: \"Antigua and Barbuda\",\n\t\ti: \"ag\"\n\t}, {\n\t\tn: \"Argentina\",\n\t\ti: \"ar\"\n\t}, {\n\t\tn: \"Armenia (Հայաստան)\",\n\t\ti: \"am\"\n\t}, {\n\t\tn: \"Aruba\",\n\t\ti: \"aw\"\n\t}, {\n\t\tn: \"Australia\",\n\t\ti: \"au\"\n\t}, {\n\t\tn: \"Austria (Österreich)\",\n\t\ti: \"at\"\n\t}, {\n\t\tn: \"Azerbaijan (Azərbaycan)\",\n\t\ti: \"az\"\n\t}, {\n\t\tn: \"Bahamas\",\n\t\ti: \"bs\"\n\t}, {\n\t\tn: \"Bahrain (‫البحرين‬‎)\",\n\t\ti: \"bh\"\n\t}, {\n\t\tn: \"Bangladesh (বাংলাদেশ)\",\n\t\ti: \"bd\"\n\t}, {\n\t\tn: \"Barbados\",\n\t\ti: \"bb\"\n\t}, {\n\t\tn: \"Belarus (Беларусь)\",\n\t\ti: \"by\"\n\t}, {\n\t\tn: \"Belgium (België)\",\n\t\ti: \"be\"\n\t}, {\n\t\tn: \"Belize\",\n\t\ti: \"bz\"\n\t}, {\n\t\tn: \"Benin (Bénin)\",\n\t\ti: \"bj\"\n\t}, {\n\t\tn: \"Bermuda\",\n\t\ti: \"bm\"\n\t}, {\n\t\tn: \"Bhutan (འབྲུག)\",\n\t\ti: \"bt\"\n\t}, {\n\t\tn: \"Bolivia\",\n\t\ti: \"bo\"\n\t}, {\n\t\tn: \"Bosnia and Herzegovina (Босна и Херцеговина)\",\n\t\ti: \"ba\"\n\t}, {\n\t\tn: \"Botswana\",\n\t\ti: \"bw\"\n\t}, {\n\t\tn: \"Bouvet Island (Bouvetøya)\",\n\t\ti: \"bv\"\n\t}, {\n\t\tn: \"Brazil (Brasil)\",\n\t\ti: \"br\"\n\t}, {\n\t\tn: \"British Indian Ocean Territory\",\n\t\ti: \"io\"\n\t}, {\n\t\tn: \"British Virgin Islands\",\n\t\ti: \"vg\"\n\t}, {\n\t\tn: \"Brunei\",\n\t\ti: \"bn\"\n\t}, {\n\t\tn: \"Bulgaria (България)\",\n\t\ti: \"bg\"\n\t}, {\n\t\tn: \"Burkina Faso\",\n\t\ti: \"bf\"\n\t}, {\n\t\tn: \"Burundi (Uburundi)\",\n\t\ti: \"bi\"\n\t}, {\n\t\tn: \"Cambodia (កម្ពុជា)\",\n\t\ti: \"kh\"\n\t}, {\n\t\tn: \"Cameroon (Cameroun)\",\n\t\ti: \"cm\"\n\t}, {\n\t\tn: \"Canada\",\n\t\ti: \"ca\"\n\t}, {\n\t\tn: \"Cape Verde (Kabu Verdi)\",\n\t\ti: \"cv\"\n\t}, {\n\t\tn: \"Caribbean Netherlands\",\n\t\ti: \"bq\"\n\t}, {\n\t\tn: \"Cayman Islands\",\n\t\ti: \"ky\"\n\t}, {\n\t\tn: \"Central African Republic (République Centrafricaine)\",\n\t\ti: \"cf\"\n\t}, {\n\t\tn: \"Chad (Tchad)\",\n\t\ti: \"td\"\n\t}, {\n\t\tn: \"Chile\",\n\t\ti: \"cl\"\n\t}, {\n\t\tn: \"China (中国)\",\n\t\ti: \"cn\"\n\t}, {\n\t\tn: \"Christmas Island\",\n\t\ti: \"cx\"\n\t}, {\n\t\tn: \"Cocos (Keeling) Islands (Kepulauan Cocos (Keeling))\",\n\t\ti: \"cc\"\n\t}, {\n\t\tn: \"Colombia\",\n\t\ti: \"co\"\n\t}, {\n\t\tn: \"Comoros (‫جزر القمر‬‎)\",\n\t\ti: \"km\"\n\t}, {\n\t\tn: \"Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)\",\n\t\ti: \"cd\"\n\t}, {\n\t\tn: \"Congo (Republic) (Congo-Brazzaville)\",\n\t\ti: \"cg\"\n\t}, {\n\t\tn: \"Cook Islands\",\n\t\ti: \"ck\"\n\t}, {\n\t\tn: \"Costa Rica\",\n\t\ti: \"cr\"\n\t}, {\n\t\tn: \"Côte d’Ivoire\",\n\t\ti: \"ci\"\n\t}, {\n\t\tn: \"Croatia (Hrvatska)\",\n\t\ti: \"hr\"\n\t}, {\n\t\tn: \"Cuba\",\n\t\ti: \"cu\"\n\t}, {\n\t\tn: \"Curaçao\",\n\t\ti: \"cw\"\n\t}, {\n\t\tn: \"Cyprus (Κύπρος)\",\n\t\ti: \"cy\"\n\t}, {\n\t\tn: \"Czech Republic (Česká republika)\",\n\t\ti: \"cz\"\n\t}, {\n\t\tn: \"Denmark (Danmark)\",\n\t\ti: \"dk\"\n\t}, {\n\t\tn: \"Djibouti\",\n\t\ti: \"dj\"\n\t}, {\n\t\tn: \"Dominica\",\n\t\ti: \"dm\"\n\t}, {\n\t\tn: \"Dominican Republic (República Dominicana)\",\n\t\ti: \"do\"\n\t}, {\n\t\tn: \"Ecuador\",\n\t\ti: \"ec\"\n\t}, {\n\t\tn: \"Egypt (‫مصر‬‎)\",\n\t\ti: \"eg\"\n\t}, {\n\t\tn: \"El Salvador\",\n\t\ti: \"sv\"\n\t}, {\n\t\tn: \"Equatorial Guinea (Guinea Ecuatorial)\",\n\t\ti: \"gq\"\n\t}, {\n\t\tn: \"Eritrea\",\n\t\ti: \"er\"\n\t}, {\n\t\tn: \"Estonia (Eesti)\",\n\t\ti: \"ee\"\n\t}, {\n\t\tn: \"Ethiopia\",\n\t\ti: \"et\"\n\t}, {\n\t\tn: \"Falkland Islands (Islas Malvinas)\",\n\t\ti: \"fk\"\n\t}, {\n\t\tn: \"Faroe Islands (Føroyar)\",\n\t\ti: \"fo\"\n\t}, {\n\t\tn: \"Fiji\",\n\t\ti: \"fj\"\n\t}, {\n\t\tn: \"Finland (Suomi)\",\n\t\ti: \"fi\"\n\t}, {\n\t\tn: \"France\",\n\t\ti: \"fr\"\n\t}, {\n\t\tn: \"French Guiana (Guyane française)\",\n\t\ti: \"gf\"\n\t}, {\n\t\tn: \"French Polynesia (Polynésie française)\",\n\t\ti: \"pf\"\n\t}, {\n\t\tn: \"French Southern Territories (Terres australes françaises)\",\n\t\ti: \"tf\"\n\t}, {\n\t\tn: \"Gabon\",\n\t\ti: \"ga\"\n\t}, {\n\t\tn: \"Gambia\",\n\t\ti: \"gm\"\n\t}, {\n\t\tn: \"Georgia (საქართველო)\",\n\t\ti: \"ge\"\n\t}, {\n\t\tn: \"Germany (Deutschland)\",\n\t\ti: \"de\"\n\t}, {\n\t\tn: \"Ghana (Gaana)\",\n\t\ti: \"gh\"\n\t}, {\n\t\tn: \"Gibraltar\",\n\t\ti: \"gi\"\n\t}, {\n\t\tn: \"Greece (Ελλάδα)\",\n\t\ti: \"gr\"\n\t}, {\n\t\tn: \"Greenland (Kalaallit Nunaat)\",\n\t\ti: \"gl\"\n\t}, {\n\t\tn: \"Grenada\",\n\t\ti: \"gd\"\n\t}, {\n\t\tn: \"Guadeloupe\",\n\t\ti: \"gp\"\n\t}, {\n\t\tn: \"Guam\",\n\t\ti: \"gu\"\n\t}, {\n\t\tn: \"Guatemala\",\n\t\ti: \"gt\"\n\t}, {\n\t\tn: \"Guernsey\",\n\t\ti: \"gg\"\n\t}, {\n\t\tn: \"Guinea (Guinée)\",\n\t\ti: \"gn\"\n\t}, {\n\t\tn: \"Guinea-Bissau (Guiné Bissau)\",\n\t\ti: \"gw\"\n\t}, {\n\t\tn: \"Guyana\",\n\t\ti: \"gy\"\n\t}, {\n\t\tn: \"Haiti\",\n\t\ti: \"ht\"\n\t}, {\n\t\tn: \"Heard Island and Mcdonald Islands\",\n\t\ti: \"hm\"\n\t}, {\n\t\tn: \"Honduras\",\n\t\ti: \"hn\"\n\t}, {\n\t\tn: \"Hong Kong (香港)\",\n\t\ti: \"hk\"\n\t}, {\n\t\tn: \"Hungary (Magyarország)\",\n\t\ti: \"hu\"\n\t}, {\n\t\tn: \"Iceland (Ísland)\",\n\t\ti: \"is\"\n\t}, {\n\t\tn: \"India (भारत)\",\n\t\ti: \"in\"\n\t}, {\n\t\tn: \"Indonesia\",\n\t\ti: \"id\"\n\t}, {\n\t\tn: \"Iran (‫ایران‬‎)\",\n\t\ti: \"ir\"\n\t}, {\n\t\tn: \"Iraq (‫العراق‬‎)\",\n\t\ti: \"iq\"\n\t}, {\n\t\tn: \"Ireland\",\n\t\ti: \"ie\"\n\t}, {\n\t\tn: \"Isle of Man\",\n\t\ti: \"im\"\n\t}, {\n\t\tn: \"Israel (‫ישראל‬‎)\",\n\t\ti: \"il\"\n\t}, {\n\t\tn: \"Italy (Italia)\",\n\t\ti: \"it\"\n\t}, {\n\t\tn: \"Jamaica\",\n\t\ti: \"jm\"\n\t}, {\n\t\tn: \"Japan (日本)\",\n\t\ti: \"jp\"\n\t}, {\n\t\tn: \"Jersey\",\n\t\ti: \"je\"\n\t}, {\n\t\tn: \"Jordan (‫الأردن‬‎)\",\n\t\ti: \"jo\"\n\t}, {\n\t\tn: \"Kazakhstan (Казахстан)\",\n\t\ti: \"kz\"\n\t}, {\n\t\tn: \"Kenya\",\n\t\ti: \"ke\"\n\t}, {\n\t\tn: \"Kiribati\",\n\t\ti: \"ki\"\n\t}, {\n\t\tn: \"Kosovo (Kosovë)\",\n\t\ti: \"xk\"\n\t}, {\n\t\tn: \"Kuwait (‫الكويت‬‎)\",\n\t\ti: \"kw\"\n\t}, {\n\t\tn: \"Kyrgyzstan (Кыргызстан)\",\n\t\ti: \"kg\"\n\t}, {\n\t\tn: \"Laos (ລາວ)\",\n\t\ti: \"la\"\n\t}, {\n\t\tn: \"Latvia (Latvija)\",\n\t\ti: \"lv\"\n\t}, {\n\t\tn: \"Lebanon (‫لبنان‬‎)\",\n\t\ti: \"lb\"\n\t}, {\n\t\tn: \"Lesotho\",\n\t\ti: \"ls\"\n\t}, {\n\t\tn: \"Liberia\",\n\t\ti: \"lr\"\n\t}, {\n\t\tn: \"Libya (‫ليبيا‬‎)\",\n\t\ti: \"ly\"\n\t}, {\n\t\tn: \"Liechtenstein\",\n\t\ti: \"li\"\n\t}, {\n\t\tn: \"Lithuania (Lietuva)\",\n\t\ti: \"lt\"\n\t}, {\n\t\tn: \"Luxembourg\",\n\t\ti: \"lu\"\n\t}, {\n\t\tn: \"Macau (澳門)\",\n\t\ti: \"mo\"\n\t}, {\n\t\tn: \"Macedonia (FYROM) (Македонија)\",\n\t\ti: \"mk\"\n\t}, {\n\t\tn: \"Madagascar (Madagasikara)\",\n\t\ti: \"mg\"\n\t}, {\n\t\tn: \"Malawi\",\n\t\ti: \"mw\"\n\t}, {\n\t\tn: \"Malaysia\",\n\t\ti: \"my\"\n\t}, {\n\t\tn: \"Maldives\",\n\t\ti: \"mv\"\n\t}, {\n\t\tn: \"Mali\",\n\t\ti: \"ml\"\n\t}, {\n\t\tn: \"Malta\",\n\t\ti: \"mt\"\n\t}, {\n\t\tn: \"Marshall Islands\",\n\t\ti: \"mh\"\n\t}, {\n\t\tn: \"Martinique\",\n\t\ti: \"mq\"\n\t}, {\n\t\tn: \"Mauritania (‫موريتانيا‬‎)\",\n\t\ti: \"mr\"\n\t}, {\n\t\tn: \"Mauritius (Moris)\",\n\t\ti: \"mu\"\n\t}, {\n\t\tn: \"Mayotte\",\n\t\ti: \"yt\"\n\t}, {\n\t\tn: \"Mexico (México)\",\n\t\ti: \"mx\"\n\t}, {\n\t\tn: \"Micronesia\",\n\t\ti: \"fm\"\n\t}, {\n\t\tn: \"Moldova (Republica Moldova)\",\n\t\ti: \"md\"\n\t}, {\n\t\tn: \"Monaco\",\n\t\ti: \"mc\"\n\t}, {\n\t\tn: \"Mongolia (Монгол)\",\n\t\ti: \"mn\"\n\t}, {\n\t\tn: \"Montenegro (Crna Gora)\",\n\t\ti: \"me\"\n\t}, {\n\t\tn: \"Montserrat\",\n\t\ti: \"ms\"\n\t}, {\n\t\tn: \"Morocco (‫المغرب‬‎)\",\n\t\ti: \"ma\"\n\t}, {\n\t\tn: \"Mozambique (Moçambique)\",\n\t\ti: \"mz\"\n\t}, {\n\t\tn: \"Myanmar (Burma) (မြန်မာ)\",\n\t\ti: \"mm\"\n\t}, {\n\t\tn: \"Namibia (Namibië)\",\n\t\ti: \"na\"\n\t}, {\n\t\tn: \"Nauru\",\n\t\ti: \"nr\"\n\t}, {\n\t\tn: \"Nepal (नेपाल)\",\n\t\ti: \"np\"\n\t}, {\n\t\tn: \"Netherlands (Nederland)\",\n\t\ti: \"nl\"\n\t}, {\n\t\tn: \"New Caledonia (Nouvelle-Calédonie)\",\n\t\ti: \"nc\"\n\t}, {\n\t\tn: \"New Zealand\",\n\t\ti: \"nz\"\n\t}, {\n\t\tn: \"Nicaragua\",\n\t\ti: \"ni\"\n\t}, {\n\t\tn: \"Niger (Nijar)\",\n\t\ti: \"ne\"\n\t}, {\n\t\tn: \"Nigeria\",\n\t\ti: \"ng\"\n\t}, {\n\t\tn: \"Niue\",\n\t\ti: \"nu\"\n\t}, {\n\t\tn: \"Norfolk Island\",\n\t\ti: \"nf\"\n\t}, {\n\t\tn: \"North Korea (조선 민주주의 인민 공화국)\",\n\t\ti: \"kp\"\n\t}, {\n\t\tn: \"Northern Mariana Islands\",\n\t\ti: \"mp\"\n\t}, {\n\t\tn: \"Norway (Norge)\",\n\t\ti: \"no\"\n\t}, {\n\t\tn: \"Oman (‫عُمان‬‎)\",\n\t\ti: \"om\"\n\t}, {\n\t\tn: \"Pakistan (‫پاکستان‬‎)\",\n\t\ti: \"pk\"\n\t}, {\n\t\tn: \"Palau\",\n\t\ti: \"pw\"\n\t}, {\n\t\tn: \"Palestine (‫فلسطين‬‎)\",\n\t\ti: \"ps\"\n\t}, {\n\t\tn: \"Panama (Panamá)\",\n\t\ti: \"pa\"\n\t}, {\n\t\tn: \"Papua New Guinea\",\n\t\ti: \"pg\"\n\t}, {\n\t\tn: \"Paraguay\",\n\t\ti: \"py\"\n\t}, {\n\t\tn: \"Peru (Perú)\",\n\t\ti: \"pe\"\n\t}, {\n\t\tn: \"Philippines\",\n\t\ti: \"ph\"\n\t}, {\n\t\tn: \"Pitcairn Islands\",\n\t\ti: \"pn\"\n\t}, {\n\t\tn: \"Poland (Polska)\",\n\t\ti: \"pl\"\n\t}, {\n\t\tn: \"Portugal\",\n\t\ti: \"pt\"\n\t}, {\n\t\tn: \"Puerto Rico\",\n\t\ti: \"pr\"\n\t}, {\n\t\tn: \"Qatar (‫قطر‬‎)\",\n\t\ti: \"qa\"\n\t}, {\n\t\tn: \"Réunion (La Réunion)\",\n\t\ti: \"re\"\n\t}, {\n\t\tn: \"Romania (România)\",\n\t\ti: \"ro\"\n\t}, {\n\t\tn: \"Russia (Россия)\",\n\t\ti: \"ru\"\n\t}, {\n\t\tn: \"Rwanda\",\n\t\ti: \"rw\"\n\t}, {\n\t\tn: \"Saint Barthélemy (Saint-Barthélemy)\",\n\t\ti: \"bl\"\n\t}, {\n\t\tn: \"Saint Helena\",\n\t\ti: \"sh\"\n\t}, {\n\t\tn: \"Saint Kitts and Nevis\",\n\t\ti: \"kn\"\n\t}, {\n\t\tn: \"Saint Lucia\",\n\t\ti: \"lc\"\n\t}, {\n\t\tn: \"Saint Martin (Saint-Martin (partie française))\",\n\t\ti: \"mf\"\n\t}, {\n\t\tn: \"Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)\",\n\t\ti: \"pm\"\n\t}, {\n\t\tn: \"Saint Vincent and the Grenadines\",\n\t\ti: \"vc\"\n\t}, {\n\t\tn: \"Samoa\",\n\t\ti: \"ws\"\n\t}, {\n\t\tn: \"San Marino\",\n\t\ti: \"sm\"\n\t}, {\n\t\tn: \"São Tomé and Príncipe (São Tomé e Príncipe)\",\n\t\ti: \"st\"\n\t}, {\n\t\tn: \"Saudi Arabia (‫المملكة العربية السعودية‬‎)\",\n\t\ti: \"sa\"\n\t}, {\n\t\tn: \"Senegal (Sénégal)\",\n\t\ti: \"sn\"\n\t}, {\n\t\tn: \"Serbia (Србија)\",\n\t\ti: \"rs\"\n\t}, {\n\t\tn: \"Seychelles\",\n\t\ti: \"sc\"\n\t}, {\n\t\tn: \"Sierra Leone\",\n\t\ti: \"sl\"\n\t}, {\n\t\tn: \"Singapore\",\n\t\ti: \"sg\"\n\t}, {\n\t\tn: \"Sint Maarten\",\n\t\ti: \"sx\"\n\t}, {\n\t\tn: \"Slovakia (Slovensko)\",\n\t\ti: \"sk\"\n\t}, {\n\t\tn: \"Slovenia (Slovenija)\",\n\t\ti: \"si\"\n\t}, {\n\t\tn: \"Solomon Islands\",\n\t\ti: \"sb\"\n\t}, {\n\t\tn: \"Somalia (Soomaaliya)\",\n\t\ti: \"so\"\n\t}, {\n\t\tn: \"South Africa\",\n\t\ti: \"za\"\n\t}, {\n\t\tn: \"South Georgia & South Sandwich Islands\",\n\t\ti: \"gs\"\n\t}, {\n\t\tn: \"South Korea (대한민국)\",\n\t\ti: \"kr\"\n\t}, {\n\t\tn: \"South Sudan (‫جنوب السودان‬‎)\",\n\t\ti: \"ss\"\n\t}, {\n\t\tn: \"Spain (España)\",\n\t\ti: \"es\"\n\t}, {\n\t\tn: \"Sri Lanka (ශ්‍රී ලංකාව)\",\n\t\ti: \"lk\"\n\t}, {\n\t\tn: \"Sudan (‫السودان‬‎)\",\n\t\ti: \"sd\"\n\t}, {\n\t\tn: \"Suriname\",\n\t\ti: \"sr\"\n\t}, {\n\t\tn: \"Svalbard and Jan Mayen (Svalbard og Jan Mayen)\",\n\t\ti: \"sj\"\n\t}, {\n\t\tn: \"Swaziland\",\n\t\ti: \"sz\"\n\t}, {\n\t\tn: \"Sweden (Sverige)\",\n\t\ti: \"se\"\n\t}, {\n\t\tn: \"Switzerland (Schweiz)\",\n\t\ti: \"ch\"\n\t}, {\n\t\tn: \"Syria (‫سوريا‬‎)\",\n\t\ti: \"sy\"\n\t}, {\n\t\tn: \"Taiwan (台灣)\",\n\t\ti: \"tw\"\n\t}, {\n\t\tn: \"Tajikistan\",\n\t\ti: \"tj\"\n\t}, {\n\t\tn: \"Tanzania\",\n\t\ti: \"tz\"\n\t}, {\n\t\tn: \"Thailand (ไทย)\",\n\t\ti: \"th\"\n\t}, {\n\t\tn: \"Timor-Leste\",\n\t\ti: \"tl\"\n\t}, {\n\t\tn: \"Togo\",\n\t\ti: \"tg\"\n\t}, {\n\t\tn: \"Tokelau\",\n\t\ti: \"tk\"\n\t}, {\n\t\tn: \"Tonga\",\n\t\ti: \"to\"\n\t}, {\n\t\tn: \"Trinidad and Tobago\",\n\t\ti: \"tt\"\n\t}, {\n\t\tn: \"Tunisia (‫تونس‬‎)\",\n\t\ti: \"tn\"\n\t}, {\n\t\tn: \"Turkey (Türkiye)\",\n\t\ti: \"tr\"\n\t}, {\n\t\tn: \"Turkmenistan\",\n\t\ti: \"tm\"\n\t}, {\n\t\tn: \"Turks and Caicos Islands\",\n\t\ti: \"tc\"\n\t}, {\n\t\tn: \"Tuvalu\",\n\t\ti: \"tv\"\n\t}, {\n\t\tn: \"Uganda\",\n\t\ti: \"ug\"\n\t}, {\n\t\tn: \"Ukraine (Україна)\",\n\t\ti: \"ua\"\n\t}, {\n\t\tn: \"United Arab Emirates (‫الإمارات العربية المتحدة‬‎)\",\n\t\ti: \"ae\"\n\t}, {\n\t\tn: \"United Kingdom\",\n\t\ti: \"gb\"\n\t}, {\n\t\tn: \"United States\",\n\t\ti: \"us\"\n\t}, {\n\t\tn: \"U.S. Minor Outlying Islands\",\n\t\ti: \"um\"\n\t}, {\n\t\tn: \"U.S. Virgin Islands\",\n\t\ti: \"vi\"\n\t}, {\n\t\tn: \"Uruguay\",\n\t\ti: \"uy\"\n\t}, {\n\t\tn: \"Uzbekistan (Oʻzbekiston)\",\n\t\ti: \"uz\"\n\t}, {\n\t\tn: \"Vanuatu\",\n\t\ti: \"vu\"\n\t}, {\n\t\tn: \"Vatican City (Città del Vaticano)\",\n\t\ti: \"va\"\n\t}, {\n\t\tn: \"Venezuela\",\n\t\ti: \"ve\"\n\t}, {\n\t\tn: \"Vietnam (Việt Nam)\",\n\t\ti: \"vn\"\n\t}, {\n\t\tn: \"Wallis and Futuna\",\n\t\ti: \"wf\"\n\t}, {\n\t\tn: \"Western Sahara (‫الصحراء الغربية‬‎)\",\n\t\ti: \"eh\"\n\t}, {\n\t\tn: \"Yemen (‫اليمن‬‎)\",\n\t\ti: \"ye\"\n\t}, {\n\t\tn: \"Zambia\",\n\t\ti: \"zm\"\n\t}, {\n\t\tn: \"Zimbabwe\",\n\t\ti: \"zw\"\n\t} ], function(i, c) {\n\t\tc.name = c.n;\n\t\tc.iso2 = c.i;\n\t\tdelete c.n;\n\t\tdelete c.i;\n\t});\n});\n"],
  "mappings": ";;;;;;;;AAAA;AAAA;AACA,KAAC,SAAS,SAAS;AAClB,UAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC/C,eAAO,CAAE,QAAS,GAAG,SAAS,GAAG;AAChC,kBAAQ,GAAG,QAAQ,QAAQ;AAAA,QAC5B,CAAC;AAAA,MACF,WAAW,OAAO,WAAW,YAAY,OAAO,SAAS;AACxD,eAAO,UAAU,QAAQ,kBAAmB,QAAQ,QAAQ;AAAA,MAC7D,OAAO;AACN,gBAAQ,QAAQ,QAAQ,QAAQ;AAAA,MACjC;AAAA,IACD,GAAG,SAAS,GAAGA,SAAQC,WAAU,WAAW;AAC3C;AACA,UAAI,aAAa,iBAAiB,KAAK,GACvC,WAAW;AAAA;AAAA,QAEV,gBAAgB;AAAA;AAAA,QAEhB,gBAAgB;AAAA;AAAA,QAEhB,kBAAkB,CAAC;AAAA;AAAA,QAEnB,eAAe,CAAC;AAAA;AAAA,QAEhB,oBAAoB,CAAE,MAAM,IAAK;AAAA;AAAA,QAEjC,oBAAoB;AAAA;AAAA,QAEpB,oBAAqB,EAAED,OAAM,EAAE,MAAM,IAAI,MAAM,OAAO;AAAA,MACvD,GAAG,OAAO;AAAA,QACT,IAAI;AAAA,QACJ,MAAM;AAAA,QACN,OAAO;AAAA,QACP,KAAK;AAAA,QACL,WAAW;AAAA,QACX,MAAM;AAAA,QACN,OAAO;AAAA,QACP,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG,eAAe;AAElB,QAAEA,OAAM,EAAE,GAAG,QAAQ,WAAW;AAC/B,uBAAe;AAAA,MAChB,CAAC;AACD,eAAS,OAAO,SAAS,SAAS;AACjC,aAAK,UAAU;AACf,aAAK,UAAU,EAAE,OAAO,CAAC,GAAG,UAAU,OAAO;AAC7C,aAAK,YAAY;AAEjB,aAAK,KAAK,MAAM,aAAa;AAC7B,aAAK,QAAQ;AACb,aAAK,KAAK;AAAA,MACX;AACA,aAAO,YAAY;AAAA,QAClB,MAAM,WAAW;AAEhB,eAAK,oBAAoB;AAEzB,eAAK,gBAAgB;AAErB,eAAK,iBAAiB;AAEtB,eAAK,eAAe;AAEpB,eAAK,sBAAsB,IAAI,EAAE,SAAS;AAE1C,eAAK,iBAAiB;AAEf,eAAK,eAAe;AAE3B,iBAAO,KAAK;AAAA,QACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAMA,qBAAqB,WAAW;AAE/B,eAAK,wBAAwB;AAE7B,eAAK,uBAAuB;AAE5B,cAAI,KAAK,QAAQ;AAAoB,iBAAK,4BAA4B;AAEtE,cAAI,KAAK,QAAQ,cAAc,UAAU,KAAK,QAAQ,oBAAoB;AACzE,iBAAK,UAAU,KAAK,KAAK,gBAAgB;AAAA,UAC1C;AAAA,QACD;AAAA;AAAA,QAEA,yBAAyB,WAAW;AACnC,cAAI,OAAO;AACX,cAAI,KAAK,QAAQ,cAAc,QAAQ;AACtC,gBAAI,eAAe,CAAC;AACpB,cAAE,KAAK,KAAK,QAAQ,eAAe,SAAS,GAAG,aAAa;AAC3D,kBAAI,cAAc,KAAK,gBAAgB,aAAa,IAAI;AACxD,kBAAI,aAAa;AAChB,6BAAa,KAAK,WAAW;AAAA,cAC9B;AAAA,YACD,CAAC;AACD,iBAAK,YAAY;AAAA,UAClB,WAAW,KAAK,QAAQ,iBAAiB,QAAQ;AACpC,gBAAI,4BAA4B,KAAK,QAAQ,iBAAiB,IAAI,SAAS,SAAS;AAChF,qBAAO,QAAQ,YAAY;AAAA,YAC/B,CAAC;AACD,iBAAK,YAAY,aAAa,OAAO,SAAS,SAAS;AACnD,qBAAO,0BAA0B,QAAQ,QAAQ,IAAI,MAAM;AAAA,YAC/D,CAAC;AAAA,UACL,OAAO;AACf,iBAAK,YAAY;AAAA,UAClB;AAAA,QACD;AAAA;AAAA;AAAA,QAGA,wBAAwB,WAAW;AAClC,cAAI,OAAO;AACX,eAAK,qBAAqB,CAAC;AAC3B,YAAE,KAAK,KAAK,QAAQ,oBAAoB,SAAS,GAAG,aAAa;AAChE,gBAAI,cAAc,KAAK,gBAAgB,aAAa,KAAK;AACzD,gBAAI,aAAa;AAChB,mBAAK,mBAAmB,KAAK,WAAW;AAAA,YACzC;AAAA,UACD,CAAC;AAAA,QACF;AAAA;AAAA,QAEA,8BAA8B;AAC7B,mBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC/C,kBAAM,MAAM,KAAK,UAAU,CAAC,EAAE,KAAK,YAAY;AAC/C,gBAAI,KAAK,QAAQ,mBAAmB,eAAe,GAAG,GAAG;AACxD,mBAAK,UAAU,CAAC,EAAE,OAAO,KAAK,QAAQ,mBAAmB,GAAG;AAAA,YAC7D;AAAA,UACD;AAAA,QACD;AAAA;AAAA,QAEA,iBAAiB,GAAG,GAAG;AACtB,iBAAO,EAAE,KAAK,cAAc,EAAE,IAAI;AAAA,QACnC;AAAA;AAAA,QAEA,iBAAiB,WAAW;AAE3B,eAAK,eAAe,EAAE,KAAK,OAAO;AAElC,cAAI,YAAY;AAChB,cAAI,KAAK,QAAQ,gBAAgB;AAChC,yBAAa,MAAM,KAAK,QAAQ;AAAA,UACjC;AACA,eAAK,aAAa,KAAK,EAAE,SAAS;AAAA,YACjC,SAAS;AAAA,UACV,CAAC,CAAC;AACF,cAAI,iBAAiB,EAAE,SAAS;AAAA,YAC/B,SAAS;AAAA,UACV,CAAC,EAAE,YAAY,KAAK,YAAY;AAEhC,cAAI,eAAe,EAAE,SAAS;AAAA,YAC7B,SAAS;AAAA,UACV,CAAC,EAAE,SAAS,cAAc;AAC1B,eAAK,oBAAoB,EAAE,SAAS;AAAA,YACnC,SAAS;AAAA,UACV,CAAC,EAAE,SAAS,YAAY;AAExB,YAAE,SAAS;AAAA,YACV,SAAS;AAAA,UACV,CAAC,EAAE,SAAS,YAAY;AAExB,eAAK,cAAc,EAAE,QAAQ;AAAA,YAC5B,SAAS;AAAA,UACV,CAAC,EAAE,SAAS,cAAc;AAC1B,cAAI,KAAK,mBAAmB,QAAQ;AACnC,iBAAK,iBAAiB,KAAK,oBAAoB,WAAW;AAC1D,cAAE,QAAQ;AAAA,cACT,SAAS;AAAA,YACV,CAAC,EAAE,SAAS,KAAK,WAAW;AAAA,UAC7B;AACA,eAAK,iBAAiB,KAAK,WAAW,EAAE;AAExC,eAAK,mBAAmB,EAAE,MAAI,KAAK,aAAa,KAAK,IAAI,IAAE,OAAO;AAClE,cAAI,CAAC,KAAK,kBAAkB;AAC3B,iBAAK,mBAAmB,EAAE,8BAA4B,KAAK,aAAa,KAAK,IAAI,IAAE,kBAAgB,KAAK,aAAa,KAAK,MAAM,IAAE,oBAAoB;AACtJ,iBAAK,iBAAiB,YAAY,KAAK,YAAY;AAAA,UACpD;AAEA,eAAK,iBAAiB,KAAK,YAAY,YAAY;AAEnD,cAAI,KAAK,QAAQ,oBAAoB;AACpC,cAAEA,OAAM,EAAE,OAAO,WAAW;AAC3B,gBAAE,iBAAiB,EAAE,KAAK,WAAW;AACpC,oBAAI,gBAAgB,KAAK;AACzB,kBAAE,IAAI,EAAE,KAAK,eAAe,EAAE,IAAI,SAAS,gBAAgB,IAAI;AAAA,cAChE,CAAC;AAAA,YACF,CAAC,EAAE,OAAO;AAAA,UACX;AACA,eAAK,YAAY,YAAY,QAAQ,EAAE,SAAS,MAAM;AAEtD,eAAK,mBAAmB,KAAK,YAAY,SAAS,UAAU;AAAA,QAC7D;AAAA;AAAA,QAEA,kBAAkB,SAAS,WAAW,WAAW;AAGhD,cAAI,MAAM;AAEV,YAAE,KAAK,WAAW,SAAS,GAAG,GAAG;AAEhC,mBAAO,wBAAwB,YAAY,0BAA0B,EAAE,OAAO;AAE9E,mBAAO,sBAAsB,EAAE,OAAO;AAEtC,mBAAO,gCAAgC,EAAE,OAAO;AAEhD,mBAAO;AAAA,UACR,CAAC;AACD,eAAK,YAAY,OAAO,GAAG;AAAA,QAC5B;AAAA;AAAA,QAEA,kBAAkB,WAAW;AAC5B,cAAI,YAAY;AAEhB,cAAI,KAAK,aAAa,IAAI,GAAG;AAC5B,wBAAY,KAAK,wBAAwB;AAAA,UAC1C;AAEA,cAAI,eAAe,KAAK,iBAAiB,IAAI;AAC7C,cAAI,cAAc;AACjB,iBAAK,cAAc,YAAY;AAAA,UAChC;AACA,cAAI,CAAC,WAAW;AAEf,gBAAI;AAEJ,gBAAI,KAAK,QAAQ,gBAAgB;AAChC,+BAAiB,KAAK,gBAAgB,KAAK,QAAQ,gBAAgB,KAAK;AAExE,kBAAI,CAAC,gBAAgB;AACpB,iCAAiB,KAAK,mBAAmB,SAAS,KAAK,mBAAmB,CAAC,IAAI,KAAK,UAAU,CAAC;AAAA,cAChG;AAAA,YACD,OAAO;AACN,+BAAiB,KAAK,mBAAmB,SAAS,KAAK,mBAAmB,CAAC,IAAI,KAAK,UAAU,CAAC;AAAA,YAChG;AACA,iBAAK,iBAAiB,eAAe;AAAA,UACtC;AAAA,QACD;AAAA;AAAA,QAEA,gBAAgB,WAAW;AAC1B,cAAI,OAAO;AAQX,eAAK,aAAa,GAAG,UAAU,KAAK,IAAI,WAAW;AAClD,iBAAK,wBAAwB;AAAA,UAC9B,CAAC;AAED,cAAI,eAAe,KAAK,kBAAkB,OAAO;AACjD,uBAAa,GAAG,UAAU,KAAK,IAAI,SAAS,GAAG;AAI9C,gBAAI,KAAK,YAAY,SAAS,MAAM,KAAK,CAAC,KAAK,aAAa,KAAK,UAAU,GAAG;AAC7E,mBAAK,cAAc;AAAA,YACpB;AAAA,UACD,CAAC;AAID,eAAK,aAAa,GAAG,SAAS,KAAK,IAAI,WAAW;AACjD,gBAAI,KAAK,aAAa,IAAI,KAAK,KAAK,uBAAuB,EAAE,MAAM;AAClE,mBAAK,WAAW,KAAK,aAAa,IAAI,CAAC;AAAA,YACxC;AACA,iBAAK,aAAa,IAAI,KAAK,uBAAuB,EAAE,IAAI;AAAA,UACzD,CAAC;AAAA,QACF;AAAA,QACA,kBAAkB,WAAW;AAC5B,cAAI,KAAK,QAAQ,mBAAmB,QAAQ;AAC3C,iBAAK,iBAAiB;AAAA,UACvB,OAAO;AACN,gBAAI,KAAK,gBAAgB;AACxB,mBAAK,cAAc,KAAK,cAAc;AAAA,YACvC;AACA,iBAAK,oBAAoB,QAAQ;AAAA,UAClC;AAAA,QACD;AAAA;AAAA,QAEA,kBAAkB,WAAW;AAC5B,cAAI,OAAO;AAMX,cAAI,EAAE,GAAG,UAAU,EAAE,aAAa;AACjC,iBAAK,kBAAkB;AAAA,UACxB,WAAW,CAAC,EAAE,GAAG,UAAU,EAAE,2BAA2B;AAEvD,cAAE,GAAG,UAAU,EAAE,4BAA4B;AAE7C,gBAAI,OAAO,KAAK,QAAQ,gBAAgB,YAAY;AACnD,mBAAK,QAAQ,YAAY,SAAS,aAAa;AAC9C,kBAAE,GAAG,UAAU,EAAE,cAAc,YAAY,YAAY;AAIvD,2BAAW,WAAW;AACrB,oBAAE,uBAAuB,EAAE,cAAc,mBAAmB;AAAA,gBAC7D,CAAC;AAAA,cACF,CAAC;AAAA,YACF;AAAA,UACD;AAAA,QACD;AAAA;AAAA,QAEA,QAAQ,WAAW;AAClB,eAAK,aAAa,MAAM;AACxB,cAAI,QAAQ,KAAK,aAAa,CAAC;AAE/B,cAAI,MAAM,mBAAmB;AAC5B,gBAAI,MAAM,KAAK,aAAa,IAAI,EAAE;AAClC,kBAAM,kBAAkB,KAAK,GAAG;AAAA,UACjC;AAAA,QACD;AAAA;AAAA,QAEA,eAAe,WAAW;AACzB,eAAK,qBAAqB;AAE1B,cAAI,iBAAiB,KAAK,YAAY,SAAS,SAAS;AACxD,eAAK,mBAAmB,cAAc;AAEtC,eAAK,YAAY,YAAY,MAAM;AACnC,eAAK,UAAU,cAAc;AAE7B,eAAK,uBAAuB;AAE5B,eAAK,kBAAkB,OAAO,EAAE,SAAS,QAAQ,EAAE,SAAS,IAAI;AAAA,QACjE;AAAA;AAAA,QAEA,sBAAsB,WAAW;AAChC,cAAI,WAAW,KAAK,aAAa,OAAO,EAAE,KAAK,YAAY,EAAEA,OAAM,EAAE,UAAU,GAC/E,oBAAoB,WAAW,KAAK,aAAa,YAAY,IAAI,KAAK,iBAAiB,YAAY,EAAEA,OAAM,EAAE,OAAO,GAAG,oBAAoB,WAAW,KAAK,iBAAiB;AAE5K,cAAI,SAAS,CAAC,qBAAqB,oBAAoB,OAAO,KAAK,iBAAiB,KAAK,OAAO;AAChG,eAAK,YAAY,IAAI,OAAO,MAAM;AAAA,QACnC;AAAA;AAAA,QAEA,wBAAwB,WAAW;AAClC,cAAI,OAAO;AAGX,eAAK,YAAY,GAAG,cAAc,KAAK,IAAI,YAAY,SAAS,GAAG;AAClE,iBAAK,mBAAmB,EAAE,IAAI,CAAC;AAAA,UAChC,CAAC;AAED,eAAK,YAAY,GAAG,UAAU,KAAK,IAAI,YAAY,SAAS,GAAG;AAC9D,iBAAK,gBAAgB,EAAE,IAAI,CAAC;AAAA,UAC7B,CAAC;AAID,cAAI,YAAY;AAChB,YAAE,MAAM,EAAE,GAAG,UAAU,KAAK,IAAI,SAAS,GAAG;AAC3C,cAAE,eAAe;AACjB,gBAAI,CAAC,WAAW;AACf,mBAAK,eAAe;AAAA,YACrB;AACA,wBAAY;AAAA,UACb,CAAC;AAKD,YAAEC,SAAQ,EAAE,GAAG,YAAY,KAAK,IAAI,SAAS,GAAG;AAG/C,cAAE,eAAe;AACjB,gBAAI,EAAE,SAAS,KAAK,MAAM,EAAE,SAAS,KAAK,MAAM;AAE/C,mBAAK,iBAAiB,EAAE,KAAK;AAAA,YAC9B,WAAW,EAAE,SAAS,KAAK,OAAO;AAEjC,mBAAK,gBAAgB;AAAA,YACtB,WAAW,EAAE,SAAS,KAAK,KAAK;AAE/B,mBAAK,eAAe;AAAA,YACrB,WAAW,EAAE,SAAS,KAAK,KAAK,EAAE,SAAS,KAAK,KAAK,EAAE,UAAU,KAAK,OAAO;AAC5E,mBAAK,gBAAgB,OAAO,aAAa,EAAE,KAAK;AAChD,mBAAK,iBAAiB,KAAK,YAAY;AAAA,YACxC,WAAW,EAAE,UAAU,KAAK,WAAW;AACtC,mBAAK,eAAe,KAAK,aAAa,MAAM,GAAG,EAAE;AACjD,mBAAK,iBAAiB,KAAK,YAAY;AAAA,YACxC;AAAA,UACD,CAAC;AAAA,QACF;AAAA;AAAA,QAEA,kBAAkB,SAAS,KAAK;AAC/B,cAAI,UAAU,KAAK,YAAY,SAAS,YAAY,EAAE,MAAM;AAC5D,cAAI,OAAO,OAAO,KAAK,KAAK,QAAQ,KAAK,IAAI,QAAQ,KAAK;AAC1D,cAAI,KAAK,QAAQ;AAEhB,gBAAI,KAAK,SAAS,SAAS,GAAG;AAC7B,qBAAO,OAAO,KAAK,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK;AAAA,YACjD;AACA,iBAAK,mBAAmB,IAAI;AAC5B,iBAAK,UAAU,IAAI;AAAA,UACpB;AAAA,QACD;AAAA;AAAA,QAEA,iBAAiB,WAAW;AAC3B,cAAI,iBAAiB,KAAK,YAAY,SAAS,YAAY,EAAE,MAAM;AACnE,cAAI,eAAe,QAAQ;AAC1B,iBAAK,gBAAgB,cAAc;AAAA,UACpC;AAAA,QACD;AAAA,QACA,kBAAkB,SAAS,SAAS;AACnC,cAAI,YAAY,KAAK,iBAAiB,OAAO,WAAW;AACvD,mBAAO,EAAE,IAAI,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,OAAO,MAAM,KAAK,CAAC,EAAE,IAAI,EAAE,SAAS,WAAW;AAAA,UAC5F,CAAC;AACD,cAAI,UAAU,QAAQ;AAErB,gBAAI,qBAAqB,UAAU,OAAO,YAAY,EAAE,MAAM,GAAG;AACjE,gBAAI,sBAAsB,mBAAmB,KAAK,KAAK,mBAAmB,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,OAAO,MAAM,GAAG;AAC7H,yBAAW,mBAAmB,KAAK;AAAA,YACpC,OAAO;AACN,yBAAW,UAAU,MAAM;AAAA,YAC5B;AAEA,iBAAK,mBAAmB,QAAQ;AAChC,iBAAK,UAAU,QAAQ;AAAA,UACxB;AAAA,QACD;AAAA;AAAA,QAEA,yBAAyB,WAAW;AACnC,cAAI,OAAO;AAEX,cAAI,QAAQ,KAAK,aAAa,IAAI,EAAE,QAAQ,cAAc,IAAI;AAC9D,cAAI,OAAO;AACV,gBAAI,eAAe,CAAC;AACpB,gBAAI,UAAU,IAAI,OAAO,OAAO,GAAG;AAEnC,gBAAG,MAAM,UAAU,GAAG;AACrB,uBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC/C,oBAAI,KAAK,UAAU,CAAC,EAAE,KAAK,MAAM,OAAO,GAAG;AAC1C,+BAAa,KAAK,KAAK,UAAU,CAAC,EAAE,IAAI;AAAA,gBACzC;AAAA,cACD;AAAA,YACD;AAEA,gBAAG,aAAa,UAAU,GAAG;AAC5B,uBAAS,IAAI,GAAG,IAAI,KAAK,UAAU,QAAQ,KAAK;AAC/C,oBAAI,KAAK,UAAU,CAAC,EAAE,KAAK,MAAM,OAAO,GAAG;AAC1C,+BAAa,KAAK,KAAK,UAAU,CAAC,EAAE,IAAI;AAAA,gBACzC;AAAA,cACD;AAAA,YACD;AAEA,gBAAI,kBAAkB;AACtB,cAAE,KAAK,cAAc,SAASC,IAAG,GAAG;AACnC,kBAAI,KAAK,kBAAkB,SAAS,CAAC,GAAG;AACvC,kCAAkB;AAAA,cACnB;AAAA,YACD,CAAC;AACD,gBAAI,CAAC,iBAAiB;AACrB,mBAAK,YAAY,aAAa,CAAC,CAAC;AAChC,mBAAK,iBAAiB,IAAI,aAAa,CAAC,CAAC,EAAE,QAAQ,QAAQ;AAAA,YAC5D;AAEA,mBAAO;AAAA,UACR;AAEA,iBAAO;AAAA,QACR;AAAA;AAAA,QAEA,oBAAoB,SAAS,UAAU;AACtC,eAAK,iBAAiB,YAAY,WAAW;AAC7C,mBAAS,SAAS,WAAW;AAAA,QAC9B;AAAA;AAAA;AAAA,QAGA,iBAAiB,SAAS,aAAa,2BAA2B;AACjE,cAAI,cAAc,4BAA4B,eAAe,KAAK;AAClE,mBAAS,IAAI,GAAG,IAAI,YAAY,QAAQ,KAAK;AAC5C,gBAAI,YAAY,CAAC,EAAE,QAAQ,aAAa;AACvC,qBAAO,YAAY,CAAC;AAAA,YACrB;AAAA,UACD;AACA,iBAAO;AAAA,QACR;AAAA;AAAA,QAEA,aAAa,SAAS,aAAa;AAClC,cAAI,CAAE,aAAa;AAClB,mBAAO;AAAA,UACR;AACA,eAAK,kBAAkB,KAAK,SAAS,UAAU,WAAW;AAE1D,cAAI,cAAc,KAAK,gBAAgB,WAAW;AAClD,eAAK,kBAAkB,OAAO,EAAE,KAAK,SAAS,YAAY,IAAI;AAE9D,cAAI,WAAW,KAAK,iBAAiB,SAAS,WAAW,WAAW,EAAE,MAAM,EAAE,OAAO;AACrF,eAAK,iBAAiB,YAAY,QAAQ;AAC1C,mBAAS,SAAS,QAAQ;AAAA,QAC3B;AAAA;AAAA,QAEA,iBAAiB,SAAS,UAAU;AAEnC,cAAI,cAAc,SAAS,KAAK,mBAAmB;AACnD,eAAK,YAAY,WAAW;AAC5B,eAAK,eAAe;AAEpB,eAAK,YAAY,WAAW;AAC5B,eAAK,aAAa,QAAQ,QAAQ;AAClC,eAAK,iBAAiB,QAAQ,QAAQ;AAEtC,eAAK,OAAO;AAAA,QACb;AAAA;AAAA,QAEA,gBAAgB,WAAW;AAC1B,eAAK,YAAY,SAAS,MAAM;AAEhC,eAAK,kBAAkB,OAAO,EAAE,SAAS,QAAQ,EAAE,YAAY,IAAI;AAEnE,YAAED,SAAQ,EAAE,IAAI,YAAY,KAAK,EAAE;AACnC,YAAE,MAAM,EAAE,IAAI,UAAU,KAAK,EAAE;AAE/B,eAAK,YAAY,IAAI,KAAK,EAAE;AAC5B,eAAK,eAAe;AAAA,QACrB;AAAA;AAAA,QAEA,WAAW,SAAS,SAAS;AAC5B,cAAI,CAAC,WAAW,CAAC,QAAQ,OAAO,GAAG;AAClC;AAAA,UACD;AACA,cAAI,YAAY,KAAK,aAAa,kBAAkB,UAAU,OAAO,GAAG,eAAe,UAAU,OAAO,EAAE,KAAK,kBAAkB,eAAe,iBAAiB,gBAAgB,QAAQ,YAAY,GAAG,aAAa,QAAQ,OAAO,EAAE,KAAK,gBAAgB,aAAa,eAAe,eAAe,aAAa,eAAe,UAAU,UAAU;AACtV,cAAI,aAAa,cAAc;AAE9B,sBAAU,UAAU,YAAY;AAAA,UACjC,WAAW,gBAAgB,iBAAiB;AAE3C,gBAAI,mBAAmB,kBAAkB;AACzC,sBAAU,UAAU,eAAe,gBAAgB;AAAA,UACpD;AAAA,QACD;AAAA;AAAA,QAEA,aAAa,SAAS,aAAa;AAClC,eAAK,iBAAiB,IAAI,WAAW,EAAE,QAAQ,QAAQ;AACvD,eAAK,aAAa,IAAI,KAAK,gBAAgB,WAAW,EAAE,IAAI;AAAA,QAC7D;AAAA;AAAA;AAAA;AAAA;AAAA,QAKA,mBAAmB,WAAW;AAC7B,cAAI,KAAK,QAAQ,mBAAmB,QAAQ;AAE3C,iBAAK,iBAAiB,EAAE,GAAG,UAAU,EAAE;AAEvC,gBAAI,CAAC,KAAK,aAAa,IAAI,GAAG;AAC7B,mBAAK,cAAc,KAAK,cAAc;AAAA,YACvC;AACA,iBAAK,oBAAoB,QAAQ;AAAA,UAClC;AAAA,QACD;AAAA;AAAA,QAEA,wBAAwB,WAAW;AAGlC,cAAI,cAAc,KAAK,kBAAkB,KAAK,OAAO,EAAE,MAAM,GAAG,EAAE,CAAC;AACnE,iBAAO,KAAK,gBAAgB,WAAW;AAAA,QACxC;AAAA;AAAA,QAEA,eAAe,SAAS,aAAa;AACpC,wBAAc,YAAY,YAAY;AAEtC,cAAI,CAAC,KAAK,kBAAkB,SAAS,WAAW,GAAG;AAClD,iBAAK,YAAY,WAAW;AAC5B,iBAAK,YAAY,WAAW;AAAA,UAC7B;AAAA,QACD;AAAA;AAAA,QAEA,YAAY,SAAS,SAAS;AAC7B,eAAK,aAAa,IAAI,OAAO;AAC7B,eAAK,wBAAwB;AAAA,QAC9B;AAAA;AAAA,QAEA,SAAS,WAAW;AAEnB,eAAK,aAAa,IAAI,KAAK,EAAE;AAC7B,eAAK,kBAAkB,OAAO,EAAE,IAAI,KAAK,EAAE;AAE3C,cAAI,YAAY,KAAK,aAAa,OAAO;AACzC,oBAAU,OAAO,KAAK,YAAY,EAAE,OAAO;AAAA,QAC5C;AAAA,MACD;AAGA,QAAE,GAAG,UAAU,IAAI,SAAS,SAAS;AACpC,YAAI,OAAO;AAGX,YAAI,YAAY,aAAa,OAAO,YAAY,UAAU;AACzD,iBAAO,KAAK,KAAK,WAAW;AAC3B,gBAAI,CAAC,EAAE,KAAK,MAAM,YAAY,UAAU,GAAG;AAC1C,gBAAE,KAAK,MAAM,YAAY,YAAY,IAAI,OAAO,MAAM,OAAO,CAAC;AAAA,YAC/D;AAAA,UACD,CAAC;AAAA,QACF,WAAW,OAAO,YAAY,YAAY,QAAQ,CAAC,MAAM,OAAO,YAAY,QAAQ;AAKnF,cAAI;AACJ,eAAK,KAAK,WAAW;AACpB,gBAAI,WAAW,EAAE,KAAK,MAAM,YAAY,UAAU;AAGlD,gBAAI,oBAAoB,UAAU,OAAO,SAAS,OAAO,MAAM,YAAY;AAG1E,wBAAU,SAAS,OAAO,EAAE,MAAM,UAAU,MAAM,UAAU,MAAM,KAAK,MAAM,CAAC,CAAC;AAAA,YAChF;AAEA,gBAAI,YAAY,WAAW;AAC1B,gBAAE,KAAK,MAAM,YAAY,YAAY,IAAI;AAAA,YAC1C;AAAA,UACD,CAAC;AAGD,iBAAO,YAAY,YAAY,UAAU;AAAA,QAC1C;AAAA,MACD;AAKA,QAAE,GAAG,UAAU,EAAE,iBAAiB,WAAW;AAC5C,eAAO;AAAA,MACR;AAEA,QAAE,GAAG,UAAU,EAAE,iBAAiB,SAAS,KAAK;AAC/C,uBAAe;AAAA,MAChB;AASA,UAAI,eAAe,EAAE,KAAK,CAAE;AAAA,QAC3B,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,GAAG;AAAA,QACF,GAAG;AAAA,QACH,GAAG;AAAA,MACJ,CAAE,GAAG,SAAS,GAAG,GAAG;AACnB,UAAE,OAAO,EAAE;AACX,UAAE,OAAO,EAAE;AACX,eAAO,EAAE;AACT,eAAO,EAAE;AAAA,MACV,CAAC;AAAA,IACF,CAAC;AAAA;AAAA;",
  "names": ["window", "document", "i"]
}
